version: "2.2"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    ports:
      - "9094:9094"
    volumes:
      - "./kafka_data:/kafka"
    environment:
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_MESSAGE_MAX_BYTES=2000000
      - KAFKA_CREATE_TOPICS="events:1:1"
    depends_on:
      - zookeeper

  postgres:
    image: postgres
    restart: unless-stopped
    volumes:
      - "./psql_data:/var/lib/postgresql/data"
    env_file:
      - .env
    ports:
      - "5435:5432"

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - postgres